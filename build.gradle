plugins {
  id 'java-library'
  id 'maven-publish'
  id 'signing'
  id 'net.kyori.invent' version '1.0.4'
  id 'net.kyori.invent-javadoc-jar' version '1.0.4'
  id 'net.kyori.invent-sonatype-repository' version '1.0.4'
  id 'net.kyori.invent-sources-jar' version '1.0.4'
  id 'net.minecrell.licenser' version '0.4'
}

group 'net.kyori'
version '1.0.0-SNAPSHOT'

tasks.withType(JavaCompile) {
  options.compilerArgs += ['-Xlint:all']
}

license {
  header project.file('header.txt')
  include '**/*.java'
  newLine false
}

repositories {
  mavenLocal()
  mavenCentral()
  maven {
    url 'https://oss.sonatype.org/content/groups/public/'
  }
}

dependencies {
  api 'net.kyori:examination-api:1.0.0'
  api 'org.checkerframework:checker-qual:2.5.7'
  testImplementation 'com.google.guava:guava-testlib:27.0.1-jre'
  testImplementation 'com.google.truth:truth:0.42'
  testImplementation 'com.google.truth.extensions:truth-java8-extension:0.42'
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
  testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

jar {
  manifest.attributes(
    'Automatic-Module-Name': 'net.kyori.mu'
  )
}

inventSonatypeRepository.enabled = System.getenv('TRAVIS') == null || project.version.endsWith('-SNAPSHOT')

publishing {
  publications {
    maven(MavenPublication) {
      from components.java

      artifact javadocJar
      artifact sourcesJar

      pom {
        name = project.name
        description = project.description

        developers {
          developer {
            id = 'kashike'
          }
        }

        issueManagement {
          system = 'GitHub Issues'
          url = 'https://github.com/KyoriPowered/mu/issues'
        }

        licenses {
          license {
            name = 'MIT License'
            url = 'https://opensource.org/licenses/MIT'
          }
        }

        scm {
          connection = 'scm:git@github.com:KyoriPowered/mu.git'
          developerConnection = 'scm:git@github.com:KyoriPowered/mu.git'
          url = 'https://github.com/KyoriPowered/mu/'
        }
      }
    }
  }
}

signing {
  required { project.hasProperty('signing.keyId') && gradle.taskGraph.hasTask(':publish') && project.version.endsWith('-SNAPSHOT') }
  sign publishing.publications.maven
}
